{"ast":null,"code":"var _jsxFileName = \"/Users/kanbaramasatoshi/VScode/react-guide-material/05_state_and_event/src/090_practice_state_props/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u7DF4\\u7FD2\\u554F\\u984C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u66F4\\u65B0\\uFF08CountUpdate\\uFF09\\u3068\\u8868\\u793A\\uFF08CountResult\\uFF09\\u3092\\u5225\\u306E\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u306B\\u5206\\u96E2\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002Example\\u30B3\\u30F3\\u30DD\\u30FC\\u30CD\\u30F3\\u30C8\\u5185\\u3067\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u306E\\u5024\\u3092\\u7BA1\\u7406\\u3059\\u308Bstate\\u3092\\u4E00\\u3064\\u5B9A\\u7FA9\\u3057\\u3066\\u3053\\u308C\\u307E\\u3067\\u306E\\u30EC\\u30AF\\u30C1\\u30E3\\u30FC\\u3067\\u5B9F\\u88C5\\u3057\\u305F\\u3088\\u3046\\u306A\\u30AB\\u30A6\\u30F3\\u30BF\\u30FC\\u3092\\u4F5C\\u6210\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountResult, {\n      title: \"\\u30AB\\u30A6\\u30F3\\u30C8\",\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CountUpdate, {\n      setCount: setCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Example;\nconst CountResult = _ref => {\n  let {\n    title,\n    count\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: [title, \": \", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 42\n  }, this);\n};\n_c2 = CountResult;\nconst CountUpdate = setCount => {\n  const countUp = () => {\n    setCount = pre + 1;\n  };\n  const countDown = () => {\n    setCount = count - 1;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = CountUpdate;\nexport default Example;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Example\");\n$RefreshReg$(_c2, \"CountResult\");\n$RefreshReg$(_c3, \"CountUpdate\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","count","setCount","children","fileName","_jsxFileName","lineNumber","columnNumber","CountResult","title","CountUpdate","_c","_ref","_c2","countUp","pre","countDown","onClick","_c3","$RefreshReg$"],"sources":["/Users/kanbaramasatoshi/VScode/react-guide-material/05_state_and_event/src/090_practice_state_props/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Example = () => {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <h3>練習問題</h3>\n      <p>カウントの更新（CountUpdate）と表示（CountResult）を別のコンポーネントに分離してください。Exampleコンポーネント内で現在のカウントの値を管理するstateを一つ定義してこれまでのレクチャーで実装したようなカウンターを作成してください。</p>\n      \n        <CountResult title=\"カウント\" count={count}/>\n        <CountUpdate setCount={setCount}/> \n      \n    </>\n  );\n};\nconst CountResult = ({ title, count}) => <h3>{title}: {count}</h3>\n\nconst CountUpdate = (setCount) => {\n  const countUp = () => {\n    setCount = (pre+ 1) \n  };\n  const countDown = () => {\n    setCount = count - 1 \n  };\n  return (\n    <>\n      <button onClick={countUp}>+</button>\n      <button onClick={countDown}>-</button>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,oBACEE,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACbX,OAAA;MAAAO,QAAA,EAAG;IAAmI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAExIX,OAAA,CAACY,WAAW;MAACC,KAAK,EAAC,0BAAM;MAACR,KAAK,EAAEA;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACzCX,OAAA,CAACc,WAAW;MAACR,QAAQ,EAAEA;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBAEnC;AAEP,CAAC;AAACP,EAAA,CAZID,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAab,MAAMS,WAAW,GAAGI,IAAA;EAAA,IAAC;IAAEH,KAAK;IAAER;EAAK,CAAC,GAAAW,IAAA;EAAA,oBAAKhB,OAAA;IAAAO,QAAA,GAAKM,KAAK,EAAC,IAAE,EAACR,KAAK;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAAA;AAAAM,GAAA,GAA5DL,WAAW;AAEjB,MAAME,WAAW,GAAIR,QAAQ,IAAK;EAChC,MAAMY,OAAO,GAAGA,CAAA,KAAM;IACpBZ,QAAQ,GAAIa,GAAG,GAAE,CAAE;EACrB,CAAC;EACD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBd,QAAQ,GAAGD,KAAK,GAAG,CAAC;EACtB,CAAC;EACD,oBACEL,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAQqB,OAAO,EAAEH,OAAQ;MAAAX,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACpCX,OAAA;MAAQqB,OAAO,EAAED,SAAU;MAAAb,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBACrC;AAEP,CAAC;AAACW,GAAA,GAbIR,WAAW;AAejB,eAAeX,OAAO;AAAC,IAAAY,EAAA,EAAAE,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}